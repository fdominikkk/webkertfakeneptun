rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == userId ||
        (
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'teacher' &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['enrolledCourses'])
        )
      );
    }
    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null &&
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'teacher';
      allow update: if request.auth != null &&
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                      (
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'teacher' ||
                        (
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'student' &&
                          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['students']) &&
                          (
                            (
                              !resource.data.students.hasAny([request.auth.uid]) &&
                              resource.data.students.size() < resource.data.maxStudents
                            ) ||
                            resource.data.students.hasAny([request.auth.uid])
                          )
                        )
                      );
      allow delete: if request.auth != null &&
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'teacher';
    }
  }
}